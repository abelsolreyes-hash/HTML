<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Ramo de flores — "En tus ojos vi la infinidad del universo"</title>
  <link href="https://fonts.googleapis.com/css2?family=Great+Vibes&family=Montserrat:wght@300;600&display=swap" rel="stylesheet">
  <style>
    :root{
      --bg1:#f6f8ff;
      --bg2:#fff7f2;
    }
    html,body{height:100%;margin:0;font-family:Montserrat,system-ui,Segoe UI,Roboto,-apple-system,"Helvetica Neue",Arial}
    body{
      background: linear-gradient(180deg,var(--bg1),var(--bg2));
      display:flex;align-items:center;justify-content:center;padding:2rem;
    }
    .card{
      width:960px;max-width:96vw;height:640px;max-height:85vh;background:rgba(255,255,255,0.7);border-radius:18px;box-shadow:0 12px 30px rgba(18,25,40,0.12);display:grid;grid-template-columns:1fr 420px;overflow:hidden;
    }
    .left{position:relative;display:flex;align-items:center;justify-content:center;background:linear-gradient(120deg, rgba(255,245,250,0.6), rgba(245,255,255,0.6));}
    canvas{width:100%;height:100%;display:block}
    .right{padding:28px;display:flex;flex-direction:column;gap:12px;align-items:flex-start;justify-content:center}
    h1{font-family:'Great Vibes',cursive;font-size:34px;margin:0;color:#3b2b4d}
    p{margin:0;color:#3b3b3b;font-weight:300}
    .controls{margin-top:12px;display:flex;gap:8px}
    button{background:#3b2b4d;color:#fff;border:none;padding:10px 14px;border-radius:10px;cursor:pointer;font-weight:600}
    button.secondary{background:transparent;color:#3b2b4d;border:2px solid #3b2b4d}
    footer{font-size:12px;color:#666;margin-top:10px}
    @media (max-width:880px){
      .card{grid-template-columns:1fr}
      .right{padding:18px}
    }
  </style>
</head>
<body>
  <div class="card">
    <div class="left">
      <canvas id="bouquet"></canvas>
    </div>
    <div class="right">
      <h1>En tus ojos vi la infinidad del universo</h1>
      <p>Hecho con el corazon y no solo codigo.</p>
      <div class="controls">
        <button id="download">Descargar PNG</button>
        <button id="toggleAnim" class="secondary">Pausar animación</button>
      </div>
      <div style="height:8px"></div>
      <footer>Hecho con ❤️.</footer>
    </div>
  </div>

  <script>
    const canvas = document.getElementById('bouquet');
    const ctx = canvas.getContext('2d');
    // Adjust for device pixel ratio
    function resize(){
      const rect = canvas.getBoundingClientRect();
      const dpr = Math.min(window.devicePixelRatio || 1, 2);
      canvas.width = Math.floor(rect.width * dpr);
      canvas.height = Math.floor(rect.height * dpr);
      ctx.setTransform(dpr,0,0,dpr,0,0);
    }
    window.addEventListener('resize', resize);

    // Flower builder utilities
    function drawPetal(x,y,angle,length,width,fill){
      ctx.save();
      ctx.translate(x,y);
      ctx.rotate(angle);
      ctx.beginPath();
      ctx.moveTo(0,0);
      ctx.bezierCurveTo(width*0.2, -length*0.35, width*0.9, -length*0.6, 0, -length);
      ctx.bezierCurveTo(-width*0.9, -length*0.6, -width*0.2, -length*0.35,0,0);
      ctx.closePath();
      ctx.fillStyle = fill;
      ctx.fill();
      ctx.restore();
    }

    function drawFlower(x,y,scale,petalCount,colors,centerColor){
      ctx.save();
      ctx.translate(x,y);
      ctx.scale(scale,scale);
      for(let i=0;i<petalCount;i++){
        const ang = (i/petalCount)*Math.PI*2;
        drawPetal(0,0,ang,40,18,colors[i % colors.length]);
      }
      // center
      ctx.beginPath();
      ctx.arc(0,0,12,0,Math.PI*2);
      ctx.fillStyle = centerColor;
      ctx.fill();
      ctx.restore();
    }

    function drawStem(x1,y1,x2,y2,thickness,leafColor){
      ctx.save();
      ctx.lineCap='round';
      ctx.lineWidth=thickness;
      ctx.strokeStyle='#2b7a3a';
      ctx.beginPath();
      ctx.moveTo(x1,y1);
      ctx.quadraticCurveTo((x1+x2)/2, (y1+y2)/2 + 30, x2,y2);
      ctx.stroke();
      // leaves
      ctx.fillStyle = leafColor;
      ctx.beginPath();
      ctx.ellipse((x1+x2)/2 + 10,(y1+y2)/2,18,10,Math.PI/4,0,Math.PI*2);
      ctx.fill();
      ctx.beginPath();
      ctx.ellipse((x1+x2)/2 - 10,(y1+y2)/2+10,16,9,-Math.PI/6,0,Math.PI*2);
      ctx.fill();
      ctx.restore();
    }

    // Bouquet composition
    const bouquet = [];
    function buildBouquet(W,H){
      bouquet.length = 0;
      const baseX = W*0.55;
      const baseY = H*0.85;
      const stems = 7;
      for(let i=0;i<stems;i++){
        const tx = baseX + (i-3)*18 + (Math.random()-0.5)*10;
        const ty = baseY - 60 - i*12 + (Math.random()-0.5)*20;
        const px = tx + (Math.random()-0.5)*40 - 80;
        const py = ty - 140 - i*20;
        const scale = 0.7 + Math.random()*0.6;
        const petalSets = [ ['#ffb3c6','#ffd6e0','#ff8fb1'], ['#ffd89f','#fff0d1','#ffc66b'], ['#d7f0ff','#aee6ff','#89d9ff'], ['#f5d6ff','#e9b3ff','#d890ff'] ];
        const colors = petalSets[i % petalSets.length];
        bouquet.push({stem:{x1:baseX,y1:baseY,x2:tx,y2:ty}, flower:{x:px,y:py,scale,petalCount:6 + (i%3),colors,centerColor:'#ffe080'}, swayPhase:Math.random()*Math.PI*2, swayRange:6 + Math.random()*8});
      }
    }

    // Background subtle stars (to hint "infinidad del universo")
    let stars = [];
    function makeStars(W,H,count){
      stars = [];
      for(let i=0;i<count;i++) stars.push({x:Math.random()*W,y:Math.random()*H*0.6, r:Math.random()*1.6, a:Math.random()});
    }

    let anim = true;
    document.getElementById('toggleAnim').addEventListener('click', ()=>{
      anim = !anim;
      document.getElementById('toggleAnim').textContent = anim? 'Pausar animación' : 'Reanudar animación';
    });

    document.getElementById('download').addEventListener('click', ()=>{
      // Create a temporary canvas sized to current drawing for download with white background
      const tmp = document.createElement('canvas');
      const rect = canvas.getBoundingClientRect();
      const dpr = Math.min(window.devicePixelRatio || 1,2);
      tmp.width = Math.floor(rect.width * dpr);
      tmp.height = Math.floor(rect.height * dpr);
      const tctx = tmp.getContext('2d');
      tctx.scale(dpr,dpr);
      // white background
      tctx.fillStyle = '#ffffff';
      tctx.fillRect(0,0,rect.width,rect.height);
      // draw the same scene into tmp by calling renderTo(tctx)
      renderTo(tctx,rect.width,rect.height, Date.now()/1000);
      const url = tmp.toDataURL('image/png');
      const a = document.createElement('a');
      a.href = url; a.download = 'ramo.png';
      a.click();
    });

    // Render function that can draw to any ctx (used for download)
    function renderTo(_ctx, W, H, t){
      const cx = _ctx;
      // background gradient
      const g = cx.createLinearGradient(0,0,0,H);
      g.addColorStop(0,'#fff8ff');
      g.addColorStop(1,'#f2fbff');
      cx.fillStyle = g;
      cx.fillRect(0,0,W,H);

      // stars
      stars.forEach(s=>{
        cx.save();
        cx.globalAlpha = 0.6 * (0.6 + 0.4*Math.sin(t + s.a*10));
        cx.beginPath();
        cx.arc(s.x,s.y, s.r, 0, Math.PI*2);
        cx.fillStyle = 'rgba(250,240,255,0.9)';
        cx.fill();
        cx.restore();
      });

      // draw stems then flowers
      bouquet.forEach(b=>{
        const sway = Math.sin(t*1.2 + b.swayPhase) * (b.swayRange);
        drawStemOnCtx(cx, b.stem.x1, b.stem.y1, b.stem.x2 + sway, b.stem.y2, 6);
      });

      bouquet.forEach((b,i)=>{
        const sway = Math.sin(t*1.2 + b.swayPhase) * (b.swayRange);
        drawFlowerOnCtx(cx, b.flower.x + sway*1.8, b.flower.y, b.flower.scale, b.flower.petalCount, b.flower.colors, b.flower.centerColor);
      });

      // ribbon
      cx.save();
      cx.translate(W*0.52,H*0.82);
      cx.rotate(0.2);
      cx.fillStyle = '#b53a59';
      cx.fillRect(-60,0,120,18);
      cx.beginPath(); cx.moveTo(-60,0); cx.lineTo(-90,18); cx.lineTo(-60,18); cx.closePath(); cx.fill();
      cx.beginPath(); cx.moveTo(60,0); cx.lineTo(90,18); cx.lineTo(60,18); cx.closePath(); cx.fill();
      cx.restore();

      // message text (center-left to top)
      cx.save();
      cx.font = '30px "Great Vibes", serif';
      cx.fillStyle = 'rgba(55,35,60,0.95)';
      cx.textAlign = 'left';
      cx.fillText('En tus ojos vi la', W*0.05, H*0.16);
      cx.fillText('infinidad del universo', W*0.05, H*0.22);
      cx.restore();
    }

    // Helper versions that use the canvas ctx bound above
    function drawStemOnCtx(_ctx,x1,y1,x2,y2,th){
      _ctx.save();
      _ctx.lineCap='round';
      _ctx.lineWidth=th;
      _ctx.strokeStyle='#2b7a3a';
      _ctx.beginPath();
      _ctx.moveTo(x1,y1);
      _ctx.quadraticCurveTo((x1+x2)/2, (y1+y2)/2 + 20, x2,y2);
      _ctx.stroke();
      _ctx.fillStyle = '#3aa055';
      _ctx.beginPath();
      _ctx.ellipse((x1+x2)/2 + 10,(y1+y2)/2,14,8,Math.PI/4,0,Math.PI*2);
      _ctx.fill();
      _ctx.beginPath();
      _ctx.ellipse((x1+x2)/2 - 8,(y1+y2)/2+6,12,7,-Math.PI/6,0,Math.PI*2);
      _ctx.fill();
      _ctx.restore();
    }

    function drawFlowerOnCtx(_ctx,x,y,scale,petalCount,colors,centerColor){
      _ctx.save();
      _ctx.translate(x,y);
      _ctx.scale(scale,scale);
      for(let i=0;i<petalCount;i++){
        const ang = (i/petalCount)*Math.PI*2;
        _ctx.save();
        _ctx.rotate(ang);
        _ctx.beginPath();
        _ctx.moveTo(0,0);
        _ctx.bezierCurveTo(6, -14, 28, -24, 0, -40);
        _ctx.bezierCurveTo(-28, -24, -6, -14,0,0);
        _ctx.closePath();
        _ctx.fillStyle = colors[i % colors.length];
        _ctx.fill();
        _ctx.restore();
      }
      _ctx.beginPath();
      _ctx.arc(0,0,12,0,Math.PI*2);
      _ctx.fillStyle = centerColor;
      _ctx.fill();
      _ctx.restore();
    }

    // main animation loop
    let lastT = 0;
    function loop(ts){
      if(!canvas.width) resize();
      const W = canvas.clientWidth;
      const H = canvas.clientHeight;
      if(bouquet.length === 0) buildBouquet(W,H), makeStars(W,H,80);
      const t = ts/1000;

      if(anim){
        // clear
        ctx.clearRect(0,0,canvas.width,canvas.height);
        // render
        renderTo(ctx, W, H, t);
      } else {
        // when paused still allow one static render so download works
        ctx.clearRect(0,0,canvas.width,canvas.height);
        renderTo(ctx,W,H,lastT);
      }

      lastT = t;
      requestAnimationFrame(loop);
    }

    // initial setup
    resize();
    // set a friendly aspect for canvas drawing area
    canvas.style.width = '100%';
    canvas.style.height = '100%';
    requestAnimationFrame(loop);
  </script>
</body>
</html>
